# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13S834p_5DF3_slh5io_z1IBYDJbXfUBY
"""

import streamlit as st
import numpy as np
import pandas as pd
import joblib

# === Load model dan tools ===
model = joblib.load("model_svm.pkl")
scaler = joblib.load("scaler.pkl")
label_encoder = joblib.load("label_encoder.pkl")
selected_features = joblib.load("selected_features.pkl")  # list nama kolom fitur terpilih (top 10)

# === Judul Aplikasi ===
st.title("🎓 Klasifikasi Topik Skripsi Mahasiswa")
st.write("Masukkan nilai mata kuliah untuk memprediksi kecenderungan topik skripsi berdasarkan kemampuan akademik.")

# === Input fitur dari user ===
user_input = {}
st.subheader("📝 Masukkan Nilai Mata Kuliah")
for feature in selected_features:
    user_input[feature] = st.number_input(f"{feature}", min_value=0.0, max_value=100.0, step=0.1)

# === Prediksi ===
if st.button("🔍 Prediksi Topik Skripsi"):
    input_df = pd.DataFrame([user_input])

    # Normalisasi dengan scaler Z-Score
    input_scaled = scaler.transform(input_df)

    # Prediksi label
    prediction = model.predict(input_scaled)[0]
    prediction_proba = model.decision_function(input_scaled)

    # Konversi ke nama label asli
    predicted_label = label_encoder.inverse_transform([prediction])[0]

    # Hitung confidence (untuk SVM, pakai jarak decision function → softmax agar jadi probabilitas)
    def softmax(x):
        e_x = np.exp(x - np.max(x))
        return e_x / e_x.sum()

    proba = softmax(prediction_proba)[prediction]

    # === Tampilkan Hasil ===
    st.success(f"📌 Prediksi: **{predicted_label}**")
    st.info(f"🤖 Tingkat Keyakinan Model: **{proba * 100:.2f}%**")